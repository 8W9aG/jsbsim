INCLUDES = -I.
LINKDIR= -Lfiltersjb

JSBSim_objects = FGAircraft.o FGAtmosphere.o FGCoefficient.o FGFCS.o FGFDMExec.o\
      FGModel.o FGOutput.o FGPosition.o FGRotation.o FGState.o FGTranslation.o\
      FGUtility.o FGEngine.o FGTank.o FGAuxiliary.o FGfdmSocket.o\
      FGConfigFile.o FGInitialCondition.o FGLGear.o FGMatrix.o FGTrimLong.o

JSBSim : $(JSBSim_objects) JSBSim.o
	cd filtersjb && make && cd ..
	g++ $(INCLUDES) $(CCOPTS) $(LINKDIR)  $(JSBSim_objects) JSBSim.o -oJSBSim -lm -lFCSComponents
FGAircraft.o : FGAircraft.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGAircraft.cpp
FGAtmosphere.o : FGAtmosphere.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGAtmosphere.cpp
FGAuxiliary.o : FGAuxiliary.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGAuxiliary.cpp
FGCoefficient.o : FGCoefficient.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGCoefficient.cpp
FGFCS.o : FGFCS.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGFCS.cpp
FGFDMExec.o : FGFDMExec.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGFDMExec.cpp
FGModel.o : FGModel.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGModel.cpp
FGOutput.o : FGOutput.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGOutput.cpp
FGPosition.o : FGPosition.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGPosition.cpp
FGRotation.o : FGRotation.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGRotation.cpp
FGState.o : FGState.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGState.cpp
FGTranslation.o : FGTranslation.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGTranslation.cpp
FGUtility.o : FGUtility.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGUtility.cpp
FGEngine.o : FGEngine.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGEngine.cpp
FGTank.o : FGTank.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGTank.cpp
FGInitialCondition.o : FGInitialCondition.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGInitialCondition.cpp
FGfdmSocket.o : FGfdmSocket.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGfdmSocket.cpp
FGConfigFile.o : FGConfigFile.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGConfigFile.cpp
FGLGear.o : FGLGear.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGLGear.cpp
FGMatrix.o : FGMatrix.cpp
	g++ $(INCLUDES) $(CCOPTS) -c FGMatrix.cpp
FGTrimLong.o: FGTrimLong.cpp FGTrimLong.h
	g++ $(INCLUDES) $(CCOPTS) -c FGTrimLong.cpp
JSBSim.o : JSBSim.cpp
	g++ $(INCLUDES) $(CCOPTS) -c JSBSim.cpp


clean:
	mv *.*~ backup
	rm *.o

all:
	touch *.cpp
	make JSBSim

debug:
	env CCOPTS=-g -WALL
	make all








